// Generated by view binder compiler. Do not edit!
package iut.project.mytodolist.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import iut.project.mytodolist.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomListBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView deleteButton;

  @NonNull
  public final ImageView editButton;

  @NonNull
  public final LinearLayout layoutRow;

  @NonNull
  public final TextView textTitle;

  @NonNull
  public final CheckBox textViewCheckbox;

  @NonNull
  public final TextView textViewDate;

  @NonNull
  public final TextView textViewDescription;

  @NonNull
  public final TextView textViewId;

  @NonNull
  public final TextView textViewName;

  private CustomListBinding(@NonNull LinearLayout rootView, @NonNull ImageView deleteButton,
      @NonNull ImageView editButton, @NonNull LinearLayout layoutRow, @NonNull TextView textTitle,
      @NonNull CheckBox textViewCheckbox, @NonNull TextView textViewDate,
      @NonNull TextView textViewDescription, @NonNull TextView textViewId,
      @NonNull TextView textViewName) {
    this.rootView = rootView;
    this.deleteButton = deleteButton;
    this.editButton = editButton;
    this.layoutRow = layoutRow;
    this.textTitle = textTitle;
    this.textViewCheckbox = textViewCheckbox;
    this.textViewDate = textViewDate;
    this.textViewDescription = textViewDescription;
    this.textViewId = textViewId;
    this.textViewName = textViewName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.deleteButton;
      ImageView deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.editButton;
      ImageView editButton = ViewBindings.findChildViewById(rootView, id);
      if (editButton == null) {
        break missingId;
      }

      LinearLayout layoutRow = (LinearLayout) rootView;

      id = R.id.textTitle;
      TextView textTitle = ViewBindings.findChildViewById(rootView, id);
      if (textTitle == null) {
        break missingId;
      }

      id = R.id.textViewCheckbox;
      CheckBox textViewCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (textViewCheckbox == null) {
        break missingId;
      }

      id = R.id.textViewDate;
      TextView textViewDate = ViewBindings.findChildViewById(rootView, id);
      if (textViewDate == null) {
        break missingId;
      }

      id = R.id.textViewDescription;
      TextView textViewDescription = ViewBindings.findChildViewById(rootView, id);
      if (textViewDescription == null) {
        break missingId;
      }

      id = R.id.textViewId;
      TextView textViewId = ViewBindings.findChildViewById(rootView, id);
      if (textViewId == null) {
        break missingId;
      }

      id = R.id.textViewName;
      TextView textViewName = ViewBindings.findChildViewById(rootView, id);
      if (textViewName == null) {
        break missingId;
      }

      return new CustomListBinding((LinearLayout) rootView, deleteButton, editButton, layoutRow,
          textTitle, textViewCheckbox, textViewDate, textViewDescription, textViewId, textViewName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
